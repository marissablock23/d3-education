returns.high <- returns %>%
group_by(country) %>%
filter(!is.na(higher)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.high = "source") %>%
select(country, year.return, higher, source.high)
returns.male <- returns %>%
group_by(country) %>%
filter(!is.na(male)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.male = "source") %>%
select(country, year.return, male, source.male)
returns.female <- returns %>%
group_by(country) %>%
filter(!is.na(female)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.female = "source") %>%
select(country, year.return, female, source.female)
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type) %>%
unique() %>%
write_csv(path = "data/clean/returns2.csv")
merge
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", "source.high", "source.male", "source.female", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type) %>%
unique() %>%
write_csv(path = "data/clean/returns2.csv")
merge
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", "higher", "male", "female", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", "source.high", "source.male", "source.female", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type) %>%
unique() %>%
write_csv(path = "data/clean/returns2.csv")
merge
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", "higher", "male", "female", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", "source.high", "source.male", "source.female", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type) %>%
unique()
head(merge, n = 40)
View(merge)
library(tidyverse)
library(readxl)
library(here)
library(jsonlite)
returns <- read_xlsx("data/ReturnsEdAnnex2.xlsx", sheet = "Sheet 1",
na = "", skip = 7)
# Rename variables
returns <- returns %>%
rename("country" = "..1", "year"= "..2", "Region" = "..3", "inc" = "..4", "yrs.sch" = "..5", "overall" = "..6", "primary" = "Prim..7", "secondary" = "Sec..8", "higher" = "Higher..9", "primary.soc" = "Prim..13", "secondary.soc" = "Sec..14", "higher.soc" = "Higher..15", "male" = "Males", "female" = "Females", "private" = "Private", "public" = "Public", "source" = "See Annex 3")
# Ignore full discounting, private for now
# Remove first row
returns <- returns[-1,]
knitr::opts_chunk$set(echo = TRUE)
returns.ovr <- returns %>%
group_by(country) %>%
filter(!is.na(overall)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.ovr = "source") %>%
select(country, year.return, overall, source.ovr)
returns.prim <- returns %>%
group_by(country) %>%
filter(!is.na(primary)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.prim = "source") %>%
select(country, year.return, primary, source.prim)
returns.sec <- returns %>%
group_by(country) %>%
filter(!is.na(secondary)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.sec = "source") %>%
select(country, year.return, secondary, source.sec)
returns.high <- returns %>%
group_by(country) %>%
filter(!is.na(higher)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.high = "source") %>%
select(country, year.return, higher, source.high)
returns.male <- returns %>%
group_by(country) %>%
filter(!is.na(male)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.male = "source") %>%
select(country, year.return, male, source.male)
returns.female <- returns %>%
group_by(country) %>%
filter(!is.na(female)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.female = "source") %>%
select(country, year.return, female, source.female)
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", "higher", "male", "female", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", "source.high", "source.male", "source.female", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type) %>%
unique()
merge
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", "higher", "male", "female", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", "source.high", "source.male", "source.female", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type) %>%
unique() %>%
mutate(globalAvg = 9)
merge
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", "higher", "male", "female", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", "source.high", "source.male", "source.female", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type) %>%
unique() %>%
mutate(globalAvgOverall = 9)
write_csv(path = "data/clean/returns2.csv")
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", "higher", "male", "female", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", "source.high", "source.male", "source.female", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type) %>%
unique() %>%
mutate(globalAvgOverall = 9) %>%
write_csv(path = "data/clean/returns2.csv")
merge
returns.female
returns.ovr
returns.ovr <- returns %>%
group_by(country) %>%
filter(!is.na(overall)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.ovr = "source") %>%
select(country, year.return, overall, source.ovr) %>%
mutate(globalAvgOverall = 9)
returns.ovr
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", "higher", "male", "female", "globalAvgOverall" key = "type", value = "value") %>%
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", "higher", "male", "female", "globalAvgOverall", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", "source.high", "source.male", "source.female", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type)
merge
merge <- returns.ovr %>%
full_join(returns.prim) %>%
full_join(returns.sec) %>%
full_join(returns.high) %>%
full_join(returns.male) %>%
full_join(returns.female) %>%
gather("overall", "primary", "secondary", "higher", "male", "female", "globalAvgOverall", key = "type", value = "value") %>%
gather("source.ovr", "source.prim", "source.sec", "source.high", "source.male", "source.female", key = "source.type", value = "source") %>%
rename(year = "year.return") %>%
arrange(country, year) %>%
filter(!is.na(value)) %>%
filter(!is.na(source)) %>%
select(-source.type) %>%
unique() %>%
write_csv(path = "data/clean/returns2.csv")
merge
library(tidyverse)
library(readxl)
library(here)
here()
disaggregate <- function(name, global) {
returns.name <- returns %>%
filter(!is.na(overall)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.name = "source") %>%
mutate(globalAvgname = global)
}
library(tidyverse)
library(readxl)
library(here)
library(jsonlite)
### Clean Data
# WDI
wdi <- read_csv("data/clean.wdi.csv")
# Rename variables
wdi <- rename(wdi, country = "country.x")
# WDI - Time Series (2004 - 2018)
wdi.time <- read_csv("data/wdi_timeseries.csv", na = "..",
col_types = cols(
`2004 [YR2004]` = col_number()
))
# Drop last 5 rows
wdi.time <- head(wdi.time, -5)
# Rename variables
wdi.time <- rename(wdi.time, country = "Country Name", cntry.code = "Country Code")
# Reshape year variables to column
wdi.time <- wdi.time %>%
gather(`2004 [YR2004]`, `2005 [YR2005]`, `2006 [YR2006]`, `2007 [YR2007]`, `2008 [YR2008]`, `2009 [YR2009]`, `2010 [YR2010]`,
`2011 [YR2011]`, `2012 [YR2012]`, `2013 [YR2013]`, `2014 [YR2014]`, `2015 [YR2015]`, `2016 [YR2016]`, `2017 [YR2017]`,
key = year, value = value)
# Drop Series Name
wdi.time <- select(wdi.time, -`Series Name`)
# Reshape Series Code column to variables
wdi.time <- wdi.time %>%
spread(key = `Series Code`, value = value)
# Drop variables with all NAs
wdi.time <- wdi.time[, colSums(is.na(wdi.time)) != nrow(wdi.time)]
# Make year variable factor
wdi.time$year <- str_sub(wdi.time$year, 1, 4)
wdi.time$year <- as.factor(wdi.time$year)
# Make variables names lowercase
colnames(wdi.time) <- tolower(colnames(wdi.time))
# Returns to schooling
returns <- read_xlsx("data/ReturnsEdAnnex2.xlsx", sheet = "Sheet 1",
na = "", skip = 7)
# Rename variables
returns <- returns %>%
rename("country" = "..1", "year"= "..2", "Region" = "..3", "inc" = "..4", "yrs.sch" = "..5", "overall" = "..6", "primary" = "Prim..7", "secondary" = "Sec..8", "higher" = "Higher..9", "primary.soc" = "Prim..13", "secondary.soc" = "Sec..14", "higher.soc" = "Higher..15", "male" = "Males", "female" = "Females", "private" = "Private", "public" = "Public", "source" = "See Annex 3")
# Ignore full discounting, private for now
# Remove first row
returns <- returns[-1,]
# World Bank Ed Stats
edstats <- read_csv("data/wb_edstats.csv", na = "..",
col_types = cols(
`2007 [YR2007]` = col_number()
))
# Drop last 5 rows
edstats <- head(edstats, -5)
# Rename variables
edstats <- rename(edstats, country = "Country Name", cntry.code = "Country Code")
# Reshape year variables to column
edstats <- edstats %>%
gather(`2007 [YR2007]`, `2008 [YR2008]`, `2009 [YR2009]`, `2010 [YR2010]`, `2011 [YR2011]`, `2012 [YR2012]`,
`2013 [YR2013]`, `2014 [YR2014]`, `2015 [YR2015]`, `2016 [YR2016]`, `2017 [YR2017]`,
key = year, value = value)
# Drop Series Name
edstats <- select(edstats, -`Series`)
# Reshape Series Code column to variables
edstats <- edstats %>%
spread(key = `Series Code`, value = value)
# Make year variable factor
edstats$year <- str_sub(edstats$year, 1, 4)
edstats$year <- as.numeric(edstats$year)
# Make variables names lowercase
colnames(edstats) <- tolower(colnames(edstats))
# Remember that aggregates and regions are included as countries
# ILO Stats
labor <- read_xlsx("data/IL_Emp_Educ.xlsx", sheet = "MBI_11_EN",
na = "", skip = 5)
labor <- labor %>% rename("country" = `Reference area`, "source" = `Source type`, "year" = "Time", "less" = "Less than basic..13",
"basic" = "Basic..14", "intermediate" = "Intermediate..15", "advanced" = "Advanced..16",
"not" = "Level not stated..17") %>% select(country, source, Sex, Age, year, less, basic, intermediate,
advanced, not)
# Make year variable factor
labor$year <- as.factor(labor$year)
disaggregate(overall, 9)
disaggregate <- function(name, global) {
returns.name <- returns %>%
group_by(country) %>%
filter(!is.na(overall)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source.name = "source") %>%
select(country, year.return, name, source.name) %>%
mutate(globalAvgname = global)
return(returns.name)
}
disaggregate(overall, 9)
disaggregate <- function(df, source, name, global, value) {
df <- returns %>%
group_by(country) %>%
filter(!is.na(overall)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source = "source") %>%
select(country, year.return, name, source) %>%
mutate(global = value)
return(returns.name)
}
disaggregate(returns.ovr, source.ovr, overall, globalAvgOverall, 9)
disaggregate <- function(df, source, name, global, value) {
df <- returns %>%
group_by(country) %>%
filter(!is.na(overall)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source = "source") %>%
select(country, year.return, name, source) %>%
mutate(global = value)
return(returns.name)
}
disaggregate(returns.ovr, source.ovr, overall, globalAvgOverall, 9)
disaggregate <- function(df, source, name, global, value) {
df %>%
group_by(country) %>%
filter(!is.na(overall)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source = "source") %>%
select(country, year.return, name, source) %>%
mutate(global = value)
return(returns.name)
}
returns.ovr <- disaggregate(returns, source.ovr, overall, globalAvgOverall, 9)
disaggregate <- function(df, source, name, global, value) {
df %>%
group_by(country) %>%
filter(!is.na(name)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source = "source") %>%
select(country, year.return, name, source) %>%
mutate(global = value)
return(returns.name)
}
returns.ovr <- disaggregate(returns, source.ovr, overall, globalAvgOverall, 9)
disaggregate <- function(df, source, name, global, value) {
df %>%
group_by(country) %>%
filter(!is.na(name)) %>%
filter(year == max(year)) %>%
rename(year.return = "year", source = "source") %>%
select(country, year.return, name, source) %>%
mutate(global = value)
}
returns.ovr <- disaggregate(returns, source.ovr, overall, globalAvgOverall, 9)
returns.country <- returns %>%
select(country) %>%
unique()
returns.country
wdi.country <- wdi %>%
select(country) %>%
unique()
wdi.country %>%
full_join(returns.country)
check <- wdi.country %>%
full_join(returns.country)
View(check)
returns.country <- returns %>%
select(country, yrs.sch) %>%
unique()
wdi.country <- wdi %>%
select(country, ny.gdp.pcap.kd) %>%
unique()
check <- wdi.country %>%
full_join(returns.country)
View(edstats)
View(check)
returns.country <- returns %>%
select(country, Region) %>%
unique()
wdi.country <- wdi %>%
select(country, cntry.code) %>%
unique()
check <- wdi.country %>%
full_join(returns.country)
View(check)
wdi
colnames(wdi)
View(wdi)
wdi$inc.grp
returns.country <- returns %>%
select(country, year) %>%
unique()
wdi.country <- wdi %>%
select(country, inc.grp, Region) %>%
unique()
check <- wdi.country %>%
full_join(returns.country)
View(check)
returns.country <- returns %>%
select(country, year) %>%
unique(country)
?unique
returns.country <- returns %>%
select(country, year) %>%
filter(year == max(year)) %>%
unique()
wdi.country <- wdi %>%
select(country, inc.grp, Region) %>%
unique()
check <- wdi.country %>%
full_join(returns.country)
View(check)
returns.country <- returns %>%
select(country, year) %>%
filter(max(year)) %>%
unique()
#################### Check for consistency in country names
returns.country <- returns %>%
select(country, year) %>%
filter(year == max(year)) %>%
unique()
returns.country <- returns %>%
select(country, year) %>%
group_by(country) %>%
filter(year == max(year)) %>%
unique()
wdi.country <- wdi %>%
select(country, inc.grp, Region) %>%
unique()
check <- wdi.country %>%
full_join(returns.country)
View(check)
check <- wdi.country %>%
full_join(returns.country) %>%
rename(returns = "year")
check <- wdi.country %>%
full_join(returns.country) %>%
rename(returns = "year") %>%
mutate(returns = as.numeric(returns != NA))
View(check)
check <- wdi.country %>%
full_join(returns.country) %>%
rename(returns = "year") %>%
mutate(returns = as.numeric(returns >= 1900))
View(check)
check <- wdi.country %>%
full_join(returns.country) %>%
rename(returns = "year") %>%
mutate(returns = ifelse(returns >=1999, 1, 0)
check <- wdi.country %>%
full_join(returns.country) %>%
rename(returns = "year") %>%
mutate(returns = ifelse(!is.na(returns), 1, 0)
check <- wdi.country %>%
full_join(returns.country) %>%
rename(returns = "year") %>%
mutate(returns = ifelse(is.na(returns), 0, 1)
check <- wdi.country %>%
full_join(returns.country) %>%
rename(returns = "year") %>%
mutate(returns = ifelse(is.na(returns), 0, 1)
View(check)
View(labor)
View(check)
check <- wdi.country %>%
full_join(returns.country) %>%
rename(returns = "year") %>%
mutate(returns = if_else(is.na(returns), 0, 1))
View(check)
